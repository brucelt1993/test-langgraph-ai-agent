# AI Agent 生产环境配置模板
# 这是生产环境的安全配置模板
# 请根据您的实际部署环境修改相应的值

# ================================
# 数据库配置（生产环境）
# ================================
POSTGRES_DB=ai_agent_prod
POSTGRES_USER=ai_agent_user
POSTGRES_PASSWORD=CHANGE_THIS_TO_A_VERY_SECURE_DATABASE_PASSWORD

# ================================
# Redis配置（生产环境）
# ================================
REDIS_PASSWORD=CHANGE_THIS_TO_A_VERY_SECURE_REDIS_PASSWORD

# ================================
# 应用安全配置（生产环境）
# ================================
# 使用以下命令生成安全的SECRET_KEY:
# python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=CHANGE_THIS_TO_A_VERY_LONG_AND_SECURE_SECRET_KEY_AT_LEAST_32_CHARACTERS

ENVIRONMENT=production
LOG_LEVEL=INFO

# 请替换为您的实际域名
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com
CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ================================
# AI服务配置（生产环境）
# ================================
OPENAI_API_KEY=sk-YOUR_PRODUCTION_OPENAI_API_KEY_HERE
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_MODEL=gpt-4
OPENAI_TIMEOUT=60
OPENAI_MAX_RETRIES=3

# ================================
# 外部API配置（生产环境）
# ================================
WEATHER_API_KEY=YOUR_PRODUCTION_WEATHER_API_KEY_HERE
WEATHER_API_URL=http://api.openweathermap.org/data/2.5

# ================================
# 应用URL配置（生产环境）
# ================================
FRONTEND_URL=https://yourdomain.com
API_BASE_URL=https://yourdomain.com/api
WS_BASE_URL=wss://yourdomain.com/api/ws

SESSION_TIMEOUT=30
MAX_CONVERSATION_ROUNDS=10

# ================================
# 端口配置（生产环境）
# ================================
HTTP_PORT=80
HTTPS_PORT=443
BACKEND_PORT=8000
FRONTEND_PORT=3000

# ================================
# 性能配置（生产环境）
# ================================
# 建议设置为服务器CPU核心数
MAX_WORKERS=4
WORKER_TIMEOUT=120

# 数据库连接池配置
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=10
REDIS_POOL_SIZE=10

# ================================
# 监控配置（生产环境）
# ================================
GRAFANA_PASSWORD=CHANGE_THIS_TO_A_SECURE_GRAFANA_PASSWORD
ENABLE_APM=true
ENABLE_DEBUG_LOGGING=false
LOG_FILE_PATH=./logs/production.log
LOG_MAX_FILE_SIZE=100
LOG_BACKUP_COUNT=5

# ================================
# 安全配置（生产环境）
# ================================
FORCE_HTTPS=true
ENABLE_CSRF_PROTECTION=true
ENABLE_RATE_LIMITING=true
API_RATE_LIMIT=100

# SSL证书配置（如果不使用反向代理处理SSL）
SSL_CERT_PATH=/etc/ssl/certs/aiagent/cert.pem
SSL_KEY_PATH=/etc/ssl/certs/aiagent/key.pem

# ================================
# 缓存配置（生产环境）
# ================================
CACHE_TTL=3600
ENABLE_RESPONSE_CACHE=true
SESSION_CACHE_TTL=1800

# ================================
# JWT配置（生产环境）
# ================================
JWT_EXPIRY_MINUTES=60
REFRESH_TOKEN_EXPIRY_DAYS=30
ENABLE_MFA=false

# ================================
# 文件存储配置（生产环境）
# ================================
MAX_UPLOAD_SIZE=10
UPLOAD_PATH=./uploads
ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,pdf,txt,docx

# ================================
# 邮件配置（生产环境）
# ================================
SMTP_HOST=smtp.yourmailserver.com
SMTP_PORT=587
SMTP_USERNAME=your-smtp-username
SMTP_PASSWORD=your-smtp-password
SMTP_USE_TLS=true
FROM_EMAIL=noreply@yourdomain.com

# ================================
# 备份配置（生产环境）
# ================================
BACKUP_INTERVAL=24
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=./backups

# ================================
# 第三方集成（生产环境）
# ================================
# Google Analytics（可选）
GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Sentry错误追踪（强烈推荐）
SENTRY_DSN=https://your-sentry-dsn-here@sentry.io/project-id
ENABLE_ERROR_TRACKING=true

# ================================
# 生产环境调试配置
# ================================
DEBUG_MODE=false
ENABLE_DOCS=false
ENABLE_TEST_ENDPOINTS=false
AUTO_SYNC_DB=false
ENABLE_DB_QUERY_LOG=false
SLOW_QUERY_THRESHOLD=2000
ENABLE_REQUEST_LOG=true

# ================================
# 生产环境安全检查清单
# ================================
# □ 已更改所有默认密码
# □ SECRET_KEY 使用32+字符的随机字符串
# □ 数据库密码使用强密码
# □ Redis密码使用强密码
# □ ALLOWED_HOSTS 仅包含实际域名
# □ CORS_ORIGINS 仅包含可信域名
# □ 已配置SSL证书
# □ 已设置Sentry错误追踪
# □ 已配置邮件服务器
# □ 已设置定期备份
# □ 防火墙规则已配置
# □ 已禁用调试模式和测试端点
# □ 日志级别设置为INFO或WARNING
# □ 已配置监控和告警

# ================================
# 环境变量安全说明
# ================================
# 1. 此文件包含敏感信息，不应提交到代码库
# 2. 使用 .gitignore 确保 .env.production 不被追踪
# 3. 考虑使用密钥管理服务（如 AWS Secrets Manager、HashiCorp Vault）
# 4. 定期轮换所有密码和API密钥
# 5. 使用环境变量或Docker secrets 在容器中注入敏感信息
# 6. 审计对此配置文件的访问权限

# ================================
# 密码生成工具
# ================================
# 使用以下命令生成安全密码：
# 
# 生成32字符密码:
# openssl rand -base64 32
# 
# 生成SECRET_KEY:
# python -c "import secrets; print(secrets.token_urlsafe(32))"
# 
# 生成随机UUID:
# python -c "import uuid; print(str(uuid.uuid4()))"